//#line 2 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the vsemi_tof_ros package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __vsemi_tof_ros__VSEMI_TOF_ROSCONFIG_H__
#define __vsemi_tof_ros__VSEMI_TOF_ROSCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace vsemi_tof_ros
{
  class vsemi_tof_rosConfigStatics;

  class vsemi_tof_rosConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(vsemi_tof_rosConfig &config, const vsemi_tof_rosConfig &max, const vsemi_tof_rosConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const vsemi_tof_rosConfig &config1, const vsemi_tof_rosConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, vsemi_tof_rosConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const vsemi_tof_rosConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, vsemi_tof_rosConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const vsemi_tof_rosConfig &config) const = 0;
      virtual void getValue(const vsemi_tof_rosConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T vsemi_tof_rosConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T vsemi_tof_rosConfig::* field;

      virtual void clamp(vsemi_tof_rosConfig &config, const vsemi_tof_rosConfig &max, const vsemi_tof_rosConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const vsemi_tof_rosConfig &config1, const vsemi_tof_rosConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, vsemi_tof_rosConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const vsemi_tof_rosConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, vsemi_tof_rosConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const vsemi_tof_rosConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const vsemi_tof_rosConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, vsemi_tof_rosConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, vsemi_tof_rosConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<vsemi_tof_rosConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(vsemi_tof_rosConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("angle_x"==(*_i)->name){angle_x = boost::any_cast<double>(val);}
        if("angle_y"==(*_i)->name){angle_y = boost::any_cast<double>(val);}
        if("image_type"==(*_i)->name){image_type = boost::any_cast<int>(val);}
        if("hdr"==(*_i)->name){hdr = boost::any_cast<int>(val);}
        if("automatic_integration_time"==(*_i)->name){automatic_integration_time = boost::any_cast<bool>(val);}
        if("integration_time_0"==(*_i)->name){integration_time_0 = boost::any_cast<int>(val);}
        if("integration_time_1"==(*_i)->name){integration_time_1 = boost::any_cast<int>(val);}
        if("integration_time_2"==(*_i)->name){integration_time_2 = boost::any_cast<int>(val);}
        if("integration_time_3"==(*_i)->name){integration_time_3 = boost::any_cast<int>(val);}
        if("integration_time_4"==(*_i)->name){integration_time_4 = boost::any_cast<int>(val);}
        if("integration_time_5"==(*_i)->name){integration_time_5 = boost::any_cast<int>(val);}
        if("integration_time_gray"==(*_i)->name){integration_time_gray = boost::any_cast<int>(val);}
        if("min_amplitude_0"==(*_i)->name){min_amplitude_0 = boost::any_cast<int>(val);}
        if("min_amplitude_1"==(*_i)->name){min_amplitude_1 = boost::any_cast<int>(val);}
        if("min_amplitude_2"==(*_i)->name){min_amplitude_2 = boost::any_cast<int>(val);}
        if("min_amplitude_3"==(*_i)->name){min_amplitude_3 = boost::any_cast<int>(val);}
        if("min_amplitude_4"==(*_i)->name){min_amplitude_4 = boost::any_cast<int>(val);}
        if("min_amplitude_5"==(*_i)->name){min_amplitude_5 = boost::any_cast<int>(val);}
        if("dcs_filter"==(*_i)->name){dcs_filter = boost::any_cast<bool>(val);}
        if("range"==(*_i)->name){range = boost::any_cast<int>(val);}
      }
    }

    double angle_x;
double angle_y;
int image_type;
int hdr;
bool automatic_integration_time;
int integration_time_0;
int integration_time_1;
int integration_time_2;
int integration_time_3;
int integration_time_4;
int integration_time_5;
int integration_time_gray;
int min_amplitude_0;
int min_amplitude_1;
int min_amplitude_2;
int min_amplitude_3;
int min_amplitude_4;
int min_amplitude_5;
bool dcs_filter;
int range;

    bool state;
    std::string name;

    
}groups;



//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double angle_x;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double angle_y;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int image_type;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int hdr;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool automatic_integration_time;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_2;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_3;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_4;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_5;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int integration_time_gray;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_amplitude_0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_amplitude_1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_amplitude_2;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_amplitude_3;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_amplitude_4;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int min_amplitude_5;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool dcs_filter;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int range;
//#line 228 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("vsemi_tof_rosConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const vsemi_tof_rosConfig &__max__ = __getMax__();
      const vsemi_tof_rosConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const vsemi_tof_rosConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const vsemi_tof_rosConfig &__getDefault__();
    static const vsemi_tof_rosConfig &__getMax__();
    static const vsemi_tof_rosConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const vsemi_tof_rosConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void vsemi_tof_rosConfig::ParamDescription<std::string>::clamp(vsemi_tof_rosConfig &config, const vsemi_tof_rosConfig &max, const vsemi_tof_rosConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class vsemi_tof_rosConfigStatics
  {
    friend class vsemi_tof_rosConfig;

    vsemi_tof_rosConfigStatics()
    {
vsemi_tof_rosConfig::GroupDescription<vsemi_tof_rosConfig::DEFAULT, vsemi_tof_rosConfig> Default("Default", "", 0, 0, true, &vsemi_tof_rosConfig::groups);
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.angle_x = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.angle_x = 160.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.angle_x = 55.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<double>("angle_x", "double", 0, "Horizontal Angle of FOV [degrees]", "", &vsemi_tof_rosConfig::angle_x)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<double>("angle_x", "double", 0, "Horizontal Angle of FOV [degrees]", "", &vsemi_tof_rosConfig::angle_x)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.angle_y = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.angle_y = 90.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.angle_y = 20.625;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<double>("angle_y", "double", 0, "Vertical Angle of FOV [degrees]", "", &vsemi_tof_rosConfig::angle_y)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<double>("angle_y", "double", 0, "Vertical Angle of FOV [degrees]", "", &vsemi_tof_rosConfig::angle_y)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.image_type = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.image_type = 2;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.image_type = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("image_type", "int", 0, "Image type", "{'enum_description': 'An enum to set image type', 'enum': [{'srcline': 9, 'description': 'Distance Only', 'srcfile': '/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Distance_only'}, {'srcline': 10, 'description': 'Distance and Grayscale', 'srcfile': '/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Distance_and_Grayscale'}, {'srcline': 11, 'description': 'Distance and Amplitude', 'srcfile': '/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Distance_and_Amplitude'}]}", &vsemi_tof_rosConfig::image_type)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("image_type", "int", 0, "Image type", "{'enum_description': 'An enum to set image type', 'enum': [{'srcline': 9, 'description': 'Distance Only', 'srcfile': '/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Distance_only'}, {'srcline': 10, 'description': 'Distance and Grayscale', 'srcfile': '/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Distance_and_Grayscale'}, {'srcline': 11, 'description': 'Distance and Amplitude', 'srcfile': '/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Distance_and_Amplitude'}]}", &vsemi_tof_rosConfig::image_type)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.hdr = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.hdr = 2;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.hdr = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("hdr", "int", 0, "HDR mode", "{'enum_description': 'An enum to set HDR modes', 'enum': [{'srcline': 14, 'description': 'HDR off', 'srcfile': '/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'HDR_off'}, {'srcline': 16, 'description': 'HDR temporal', 'srcfile': '/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'HDR_temporal'}]}", &vsemi_tof_rosConfig::hdr)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("hdr", "int", 0, "HDR mode", "{'enum_description': 'An enum to set HDR modes', 'enum': [{'srcline': 14, 'description': 'HDR off', 'srcfile': '/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'HDR_off'}, {'srcline': 16, 'description': 'HDR temporal', 'srcfile': '/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'HDR_temporal'}]}", &vsemi_tof_rosConfig::hdr)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.automatic_integration_time = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.automatic_integration_time = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.automatic_integration_time = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<bool>("automatic_integration_time", "bool", 0, "Automatic integration time", "", &vsemi_tof_rosConfig::automatic_integration_time)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<bool>("automatic_integration_time", "bool", 0, "Automatic integration time", "", &vsemi_tof_rosConfig::automatic_integration_time)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_0 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_0 = 3000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_0 = 1000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_0", "int", 0, "Integration time TOF for beam A [uS]", "", &vsemi_tof_rosConfig::integration_time_0)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_0", "int", 0, "Integration time TOF for beam A [uS]", "", &vsemi_tof_rosConfig::integration_time_0)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_1 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_1 = 1000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_1 = 200;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_1", "int", 0, "Integration time TOF for beam A [uS]", "", &vsemi_tof_rosConfig::integration_time_1)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_1", "int", 0, "Integration time TOF for beam A [uS]", "", &vsemi_tof_rosConfig::integration_time_1)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_2 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_2 = 1000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_2 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_2", "int", 0, "Integration time TOF for beam A [uS]", "", &vsemi_tof_rosConfig::integration_time_2)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_2", "int", 0, "Integration time TOF for beam A [uS]", "", &vsemi_tof_rosConfig::integration_time_2)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_3 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_3 = 1000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_3 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_3", "int", 0, "Integration time TOF for beam A [uS]", "", &vsemi_tof_rosConfig::integration_time_3)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_3", "int", 0, "Integration time TOF for beam A [uS]", "", &vsemi_tof_rosConfig::integration_time_3)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_4 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_4 = 1000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_4 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_4", "int", 0, "Integration time TOF for beam B [uS]", "", &vsemi_tof_rosConfig::integration_time_4)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_4", "int", 0, "Integration time TOF for beam B [uS]", "", &vsemi_tof_rosConfig::integration_time_4)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_5 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_5 = 1000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_5 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_5", "int", 0, "Integration time TOF for beam B [uS]", "", &vsemi_tof_rosConfig::integration_time_5)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_5", "int", 0, "Integration time TOF for beam B [uS]", "", &vsemi_tof_rosConfig::integration_time_5)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.integration_time_gray = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.integration_time_gray = 50000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.integration_time_gray = 6000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_gray", "int", 0, "Integration time Grayscale [uS]", "", &vsemi_tof_rosConfig::integration_time_gray)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("integration_time_gray", "int", 0, "Integration time Grayscale [uS]", "", &vsemi_tof_rosConfig::integration_time_gray)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_amplitude_0 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_amplitude_0 = 2047;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_amplitude_0 = 60;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("min_amplitude_0", "int", 0, "threshold minAmplitude 0 beam A LSB", "", &vsemi_tof_rosConfig::min_amplitude_0)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("min_amplitude_0", "int", 0, "threshold minAmplitude 0 beam A LSB", "", &vsemi_tof_rosConfig::min_amplitude_0)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_amplitude_1 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_amplitude_1 = 2047;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_amplitude_1 = 40;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("min_amplitude_1", "int", 0, "threshold minAmplitude 1 beam A LSB", "", &vsemi_tof_rosConfig::min_amplitude_1)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("min_amplitude_1", "int", 0, "threshold minAmplitude 1 beam A LSB", "", &vsemi_tof_rosConfig::min_amplitude_1)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_amplitude_2 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_amplitude_2 = 2047;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_amplitude_2 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("min_amplitude_2", "int", 0, "threshold minAmplitude 2 beam A LSB", "", &vsemi_tof_rosConfig::min_amplitude_2)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("min_amplitude_2", "int", 0, "threshold minAmplitude 2 beam A LSB", "", &vsemi_tof_rosConfig::min_amplitude_2)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_amplitude_3 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_amplitude_3 = 2047;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_amplitude_3 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("min_amplitude_3", "int", 0, "threshold minAmplitude 3 beam A LSB", "", &vsemi_tof_rosConfig::min_amplitude_3)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("min_amplitude_3", "int", 0, "threshold minAmplitude 3 beam A LSB", "", &vsemi_tof_rosConfig::min_amplitude_3)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_amplitude_4 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_amplitude_4 = 2047;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_amplitude_4 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("min_amplitude_4", "int", 0, "threshold minAmplitude 4 beam B LSB", "", &vsemi_tof_rosConfig::min_amplitude_4)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("min_amplitude_4", "int", 0, "threshold minAmplitude 4 beam B LSB", "", &vsemi_tof_rosConfig::min_amplitude_4)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.min_amplitude_5 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.min_amplitude_5 = 2047;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.min_amplitude_5 = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("min_amplitude_5", "int", 0, "threshold minAmplitude 5 beam B LSB", "", &vsemi_tof_rosConfig::min_amplitude_5)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("min_amplitude_5", "int", 0, "threshold minAmplitude 5 beam B LSB", "", &vsemi_tof_rosConfig::min_amplitude_5)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.dcs_filter = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.dcs_filter = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.dcs_filter = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<bool>("dcs_filter", "bool", 0, "DCS filter", "", &vsemi_tof_rosConfig::dcs_filter)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<bool>("dcs_filter", "bool", 0, "DCS filter", "", &vsemi_tof_rosConfig::dcs_filter)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.range = 1000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.range = 9000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.range = 7500;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("range", "int", 0, "Range", "", &vsemi_tof_rosConfig::range)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr(new vsemi_tof_rosConfig::ParamDescription<int>("range", "int", 0, "Range", "", &vsemi_tof_rosConfig::range)));
//#line 246 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(vsemi_tof_rosConfig::AbstractGroupDescriptionConstPtr(new vsemi_tof_rosConfig::GroupDescription<vsemi_tof_rosConfig::DEFAULT, vsemi_tof_rosConfig>(Default)));
//#line 366 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<vsemi_tof_rosConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<vsemi_tof_rosConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    vsemi_tof_rosConfig __max__;
    vsemi_tof_rosConfig __min__;
    vsemi_tof_rosConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const vsemi_tof_rosConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static vsemi_tof_rosConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &vsemi_tof_rosConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const vsemi_tof_rosConfig &vsemi_tof_rosConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const vsemi_tof_rosConfig &vsemi_tof_rosConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const vsemi_tof_rosConfig &vsemi_tof_rosConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<vsemi_tof_rosConfig::AbstractParamDescriptionConstPtr> &vsemi_tof_rosConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<vsemi_tof_rosConfig::AbstractGroupDescriptionConstPtr> &vsemi_tof_rosConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const vsemi_tof_rosConfigStatics *vsemi_tof_rosConfig::__get_statics__()
  {
    const static vsemi_tof_rosConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = vsemi_tof_rosConfigStatics::get_instance();

    return statics;
  }

//#line 9 "/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg"
      const int vsemi_tof_ros_Distance_only = 0;
//#line 10 "/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg"
      const int vsemi_tof_ros_Distance_and_Grayscale = 1;
//#line 11 "/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg"
      const int vsemi_tof_ros_Distance_and_Amplitude = 2;
//#line 14 "/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg"
      const int vsemi_tof_ros_HDR_off = 0;
//#line 16 "/home/vsemi/sdk/VSEMI_TOF_SDK2/samples/ros/src/vsemi_tof_ros/cfg/vsemi_tof_ros.cfg"
      const int vsemi_tof_ros_HDR_temporal = 2;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __VSEMI_TOF_ROSRECONFIGURATOR_H__
